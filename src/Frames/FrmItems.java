/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import comunes.Conexion;
import comunes.comJCombox;
import garra.Garra;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class FrmItems extends javax.swing.JDialog {

    Garra conex;
    Statement ejecutar;
    ResultSet resultado;
    String sentencia;
    char operacion;
    DefaultTableModel tabla = new DefaultTableModel();

    /**
     * Creates new form FrmVoluntarios
     */
    public FrmItems(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        inicio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtPrecioCosto = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtExistencias = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAnimales = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        comboClasificacion = new javax.swing.JComboBox();
        comboMarca = new javax.swing.JComboBox();
        comboCategoria = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 0));
        jLabel1.setText("REGISTRO DE ITEMS");

        jLabel2.setText("Id Item:");

        jLabel3.setText("Descripción:");

        jLabel5.setText("Precio Costo:");

        jLabel7.setText("Clasificacion");

        jLabel9.setText("Existencias:");

        txtID.setEditable(false);
        txtID.setEnabled(false);

        txtPrecioCosto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPrecioCostoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioCostoKeyTyped(evt);
            }
        });

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        txtExistencias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtExistenciasActionPerformed(evt);
            }
        });
        txtExistencias.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtExistenciasKeyTyped(evt);
            }
        });

        btnAgregar.setText("Añadir");
        btnAgregar.setToolTipText("click para agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Aceptar");
        btnGuardar.setToolTipText("click para guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.setToolTipText("click para cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnModificar.setText("Editar");
        btnModificar.setToolTipText("click para modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Suprimir");
        btnEliminar.setToolTipText("click para eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCerrar.setText("Cerrar");
        btnCerrar.setToolTipText("click para cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        tablaAnimales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Descripción", "Precio Costo", "Clasificacion", "Marca", "Categoria", "Existencias"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaAnimales.getTableHeader().setReorderingAllowed(false);
        tablaAnimales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaAnimalesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tablaAnimalesMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(tablaAnimales);
        if (tablaAnimales.getColumnModel().getColumnCount() > 0) {
            tablaAnimales.getColumnModel().getColumn(0).setMinWidth(50);
            tablaAnimales.getColumnModel().getColumn(0).setMaxWidth(50);
            tablaAnimales.getColumnModel().getColumn(1).setMinWidth(80);
            tablaAnimales.getColumnModel().getColumn(1).setMaxWidth(80);
            tablaAnimales.getColumnModel().getColumn(2).setMinWidth(80);
            tablaAnimales.getColumnModel().getColumn(2).setMaxWidth(80);
            tablaAnimales.getColumnModel().getColumn(3).setMinWidth(80);
            tablaAnimales.getColumnModel().getColumn(3).setMaxWidth(80);
            tablaAnimales.getColumnModel().getColumn(4).setMinWidth(80);
            tablaAnimales.getColumnModel().getColumn(4).setMaxWidth(80);
            tablaAnimales.getColumnModel().getColumn(5).setMinWidth(80);
            tablaAnimales.getColumnModel().getColumn(5).setMaxWidth(80);
        }

        jLabel4.setText("Marca:");

        jLabel6.setText("Categoria");

        comboMarca.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel11.setIcon(new javax.swing.ImageIcon("J:\\Garra\\garrita.png")); // NOI18N
        jLabel11.setText("jLabel4");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCerrar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 717, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel1))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPrecioCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(comboClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(comboMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(txtExistencias, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(comboCategoria, javax.swing.GroupLayout.Alignment.LEADING, 0, 125, Short.MAX_VALUE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel2)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel11))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel5)
                    .addComponent(txtPrecioCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(comboClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel9)
                    .addComponent(txtExistencias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar)
                    .addComponent(btnCerrar))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        accionAgregar();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        accionGuardar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        accionCancelar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        accionModificar(); // TODO add your handling code here:
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        accionEliminar();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void tablaAnimalesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaAnimalesMouseClicked
        cargarCuadros();
    }//GEN-LAST:event_tablaAnimalesMouseClicked

    private void tablaAnimalesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaAnimalesMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tablaAnimalesMouseEntered

    private void txtExistenciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtExistenciasActionPerformed
        btnGuardar.doClick();        // TODO add your handling code here:
    }//GEN-LAST:event_txtExistenciasActionPerformed

    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtPrecioCosto.grabFocus();
        } // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreKeyPressed

    private void txtPrecioCostoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioCostoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            comboClasificacion.grabFocus();
        } // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioCostoKeyPressed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped

    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtPrecioCostoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioCostoKeyTyped
        char car = evt.getKeyChar();
        if ((car < '0' || car > '9')) {
            evt.consume();
        } // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioCostoKeyTyped

    private void txtExistenciasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtExistenciasKeyTyped
        char car = evt.getKeyChar();
        if ((car < '0' || car > '9')) {
            evt.consume();
        }// TODO add your handling code here:
    }//GEN-LAST:event_txtExistenciasKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmItems dialog = new FrmItems(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox comboCategoria;
    private javax.swing.JComboBox comboClasificacion;
    private javax.swing.JComboBox comboMarca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaAnimales;
    private javax.swing.JTextField txtExistencias;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecioCosto;
    // End of variables declaration//GEN-END:variables

    private void inicio() {
        try {
            ejecutar = conex.getConexion().createStatement();
            Conexion con = new Conexion();
            con.estaConectado();
            con.cargarCombo("select * from item_clasificacion", comboClasificacion);
            con.cargarCombo("select * from marcas", comboMarca);
            con.cargarCombo("select * from categorias", comboCategoria);
            mostrarVol();
            modoEdicion(false);
        } catch (SQLException ex) {
            Logger.getLogger(FrmItems.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void modoEdicion(boolean bl) {
        txtID.setEnabled(bl);
        txtNombre.setEnabled(bl);
        txtPrecioCosto.setEnabled(bl);
        comboClasificacion.setEnabled(bl);
        comboMarca.setEnabled(bl);
        comboCategoria.setEnabled(bl);
        txtExistencias.setEnabled(bl);
        comboClasificacion.setEnabled(bl);
   
        btnAgregar.setEnabled(!bl);
        btnGuardar.setEnabled(bl);
        btnCancelar.setEnabled(bl);
        btnModificar.setEnabled(!bl);
        btnEliminar.setEnabled(!bl);
        btnCerrar.setEnabled(!bl);

        tablaAnimales.setEnabled(!bl);

    }

    private void accionAgregar() {
        sentencia = "SELECT MAX(idItems) FROM Items";
        try {
            resultado = ejecutar.executeQuery(sentencia);
            resultado.first();
            limpiarCuadros();
            txtID.setText(Integer.toString(resultado.getInt(1) + 1));
            modoEdicion(true);
            operacion = 'A';
            txtNombre.grabFocus();
        } catch (SQLException ex) {
            Logger.getLogger(FrmItems.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void accionGuardar() {
        String id = txtID.getText();
        String nombre = txtNombre.getText();
        String preciocosto = txtPrecioCosto.getText();
        String clasificacion = comJCombox.getComboxString(comboClasificacion, 1);
        String marca = comJCombox.getComboxString(comboMarca, 1);
        String categoria = comJCombox.getComboxString(comboCategoria, 1);
        String existencias = txtExistencias.getText();
        if (nombre.isEmpty() || preciocosto.isEmpty() || existencias.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe" + " ingresar datos", " Revise el casillero vacio", JOptionPane.ERROR_MESSAGE);
            txtNombre.grabFocus();
        }
        if (operacion == 'A') {
            sentencia = "INSERT INTO Items VALUES('" + id + "','" + nombre + "','" + preciocosto + "','" + clasificacion + "','" + marca+ "','" + categoria+ "','"+existencias+"')";
            System.out.println(sentencia);
        }
        if (operacion == 'M') {
            sentencia = "UPDATE Items SET DescripItems='" + nombre + "',PrecioCosto='" + preciocosto + "',iditem_clasificacion='" + clasificacion + "',idmarcas = '" + marca + "',idCategorias='" + categoria + "',Existecia='" + existencias + "' WHERE idItems='" + id + "'";
        }
        try {
            ejecutar.executeUpdate(sentencia);

        } catch (SQLException ex) {
            Logger.getLogger(FrmItems.class.getName()).log(Level.SEVERE, null, ex);
        }
        limpiarCuadros();
        mostrarVol();
        modoEdicion(false);
    }

    private void accionCancelar() {
        modoEdicion(false);
        limpiarCuadros();
    }

    private void accionModificar() {
        if (tablaAnimales.getSelectedRow() >= 0) {
            operacion = 'M';
            modoEdicion(true);
            txtNombre.grabFocus();
        } else {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningun registro", "Seleccione...", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void accionEliminar() {
        int fsel = tablaAnimales.getSelectedRow();
        if (fsel >= 0) {
            String xid = tablaAnimales.getValueAt(fsel, 0).toString();
            String xdes = tablaAnimales.getValueAt(fsel, 1).toString();
            int resp = JOptionPane.showConfirmDialog(this, "Confirma que desea eliminar el Item *" + xdes.toUpperCase() + "* del Sistema?", "Confirme...",
                    JOptionPane.YES_NO_OPTION);
            if (resp == JOptionPane.YES_OPTION) {
                sentencia = "DELETE FROM Items WHERE idItems='" + xid + "'";
                try {
                    ejecutar.executeUpdate(sentencia);
                } catch (SQLException ex) {
                    Logger.getLogger(FrmItems.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            mostrarVol();
            limpiarCuadros();

        }
    }

    private void cargarCuadros() {
        int fsel = tablaAnimales.getSelectedRow();
        if (fsel >= 0) {
            String xid = tablaAnimales.getValueAt(fsel, 0).toString();
            sentencia = "SELECT * FROM Items WHERE idItems = '" + xid + "'";
            try {
                resultado = ejecutar.executeQuery(sentencia);
                resultado.first();
                txtID.setText(resultado.getString(1));
                txtNombre.setText(resultado.getString(2));
                txtPrecioCosto.setText(resultado.getString(3));
                comJCombox.setComboxPosition(comboClasificacion,resultado.getString(4),1);
                comJCombox.setComboxPosition(comboMarca,resultado.getString(5),1);
                comJCombox.setComboxPosition(comboCategoria,resultado.getString(6),1);
                txtExistencias.setText(resultado.getString(7));

            } catch (SQLException ex) {
                Logger.getLogger(FrmItems.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private void limpiarCuadros() {
        txtNombre.setText(null);
        txtPrecioCosto.setText(null);
        comboClasificacion.setSelectedIndex(0);
        comboMarca.setSelectedIndex(0);
        comboCategoria.setSelectedIndex(0);
        txtID.setText(null);
        txtExistencias.setText(null);


    }

    private void mostrarVol() {
        tabla.setRowCount(0);
        tabla = (DefaultTableModel) tablaAnimales.getModel();
        sentencia = "SELECT `idItems`,`DescripItems`,`PrecioCosto`,`Clasificacion`,`DescripMarcas`,`CodCategorias`,`Existecia` FROM items_vista";
        try {
            resultado = ejecutar.executeQuery(sentencia);
            while (resultado.next()) {
                Object fila[] = new Object[7];
                fila[0] = resultado.getInt(1);
                fila[1] = resultado.getString(2);
                fila[2] = resultado.getString(3);
                fila[3] = resultado.getString(4);
                fila[4] = resultado.getString(5);
                fila[5] = resultado.getString(6);
                fila[6] = resultado.getString(7);

                tabla.addRow(fila);
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmItems.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
